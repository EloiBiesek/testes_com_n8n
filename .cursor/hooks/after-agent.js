#!/usr/bin/env node
const fs = require('fs');
const path = require('path');

// Fun√ß√£o principal que captura e salva o log
async function captureAndSaveAgentLog() {
  try {
    // Captura STDIN (output completo do Agent)
    const chunks = [];
    for await (const chunk of process.stdin) chunks.push(chunk);
    const output = Buffer.concat(chunks).toString('utf8');

    // Cria diret√≥rio de logs se n√£o existir
    const logDir = path.resolve('cursor_logs');
    if (!fs.existsSync(logDir)) fs.mkdirSync(logDir, { recursive: true });

    // Cria nome do arquivo com timestamp
    const ts = new Date().toISOString().replace(/:/g, '-').replace(/\..*/, '');
    const file = path.join(logDir, `${ts}.md`);

    // Escreve o conte√∫do no arquivo
    fs.writeFileSync(
      file, 
      `# Cursor Agent Log - ${new Date().toISOString()}\n\n${output}`,
      'utf8'
    );

    console.log(`üìù Log autom√°tico salvo em ${path.relative('.', file)}`);
  } catch (error) {
    console.error(`‚ùå Erro ao salvar log: ${error.message}`);
  }
}

// Executa a fun√ß√£o principal
captureAndSaveAgentLog();